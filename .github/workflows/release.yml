name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha.*'

  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (quick validation)'
        required: false
        default: 'true'
        type: boolean

permissions:
  contents: write  # Required for creating releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for git metadata

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install hatch
        run: |
          pip install hatch

      - name: Install dependencies
        run: |
          hatch env create

      - name: Extract version from tag
        if: github.event_name == 'push'
        id: get_version
        run: |
          # Remove 'v' prefix from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Validate VERSION file matches tag
        if: github.event_name == 'push'
        run: |
          FILE_VERSION=$(cat VERSION | tr -d '[:space:]')
          TAG_VERSION=${{ steps.get_version.outputs.VERSION }}

          # Remove -dev suffix from file version for comparison
          FILE_VERSION_CLEAN=${FILE_VERSION%-dev}

          echo "VERSION file: $FILE_VERSION (clean: $FILE_VERSION_CLEAN)"
          echo "Git tag: $TAG_VERSION"

          if [ "$FILE_VERSION_CLEAN" != "$TAG_VERSION" ]; then
            echo "ERROR: VERSION file ($FILE_VERSION_CLEAN) does not match git tag ($TAG_VERSION)"
            exit 1
          fi

      - name: Build release artifact (test mode)
        if: github.event_name == 'workflow_dispatch' && inputs.test_mode == 'true'
        run: |
          hatch run bash build_release_data.sh --test --clean

      - name: Build release artifact (full)
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.test_mode == 'false')
        run: |
          hatch run bash build_release_data.sh --clean

      - name: Verify release artifact
        run: |
          # Check that tarball was created
          TARBALL=$(ls build/release/release-*.tar.gz | head -n 1)
          if [ ! -f "$TARBALL" ]; then
            echo "ERROR: Release tarball not found"
            exit 1
          fi

          echo "Found release: $TARBALL"
          echo "Size: $(du -h $TARBALL | cut -f1)"

          # Verify checksum file exists
          if [ ! -f "${TARBALL}.sha256" ]; then
            echo "ERROR: Checksum file not found"
            exit 1
          fi

          # Verify checksum
          cd build/release
          sha256sum -c "$(basename ${TARBALL}.sha256)"
          cd ../..

          echo "✓ Artifact verified"

      - name: Extract release info
        id: release_info
        run: |
          VERSION=$(cat VERSION | tr -d '[:space:]' | sed 's/-dev$//')
          TARBALL=$(ls build/release/release-*.tar.gz | head -n 1)
          CHECKSUM=$(cat ${TARBALL}.sha256 | cut -d' ' -f1)

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TARBALL=$TARBALL" >> $GITHUB_OUTPUT
          echo "TARBALL_NAME=$(basename $TARBALL)" >> $GITHUB_OUTPUT
          echo "CHECKSUM=$CHECKSUM" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION=${{ steps.release_info.outputs.VERSION }}
          CHECKSUM=${{ steps.release_info.outputs.CHECKSUM }}

          cat > release_notes.md <<EOF
          ## Release v${VERSION}

          ### Checksums

          - **SHA256**: \`${CHECKSUM}\`

          ### Verification

          \`\`\`bash
          echo "${CHECKSUM}  release-v${VERSION}.tar.gz" | sha256sum -c
          \`\`\`
          EOF

          echo "Release notes generated"

      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.release_info.outputs.VERSION }}
          body_path: release_notes.md
          files: |
            ${{ steps.release_info.outputs.TARBALL }}
            ${{ steps.release_info.outputs.TARBALL }}.sha256
          draft: false
          prerelease: ${{ contains(steps.release_info.outputs.VERSION, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact (workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: |
            ${{ steps.release_info.outputs.TARBALL }}
            ${{ steps.release_info.outputs.TARBALL }}.sha256
          retention-days: 7

  # Optional: Validation job that can be expanded later
  validate:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download release artifact
        uses: actions/download-artifact@v4
        if: github.event_name == 'workflow_dispatch'
        with:
          name: release-artifact

      - name: Basic validation
        run: |
          echo "✓ Release validation passed"
          echo "TODO: Add comprehensive validation tests"
          # Future: Extract tarball, verify structure, run smoke tests
